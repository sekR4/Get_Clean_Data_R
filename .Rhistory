setwd("D:/Dropbox/01_Studium2015/Data Science/I Januar/03_Getting and Cleaning Data/Get_Clean_Data_R")
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
download.file(fileURL, destfile = "./data/cameras.csv")
if (!file.exists("data")) {dir.create("data")}
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
download.file(fileURL, destfile = "./data/cameras.csv")
list.files("data/")
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("data/cameras.csv", sep = ",", header = TRUE)
head(cameraData)
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.xlsx")
install.packages("XML")
library(XML)
fileURL <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
head(doc)
doc <- xmlTreeParse(fileURL, useInternalNodes = TRUE)
head(doc)
doc <- xmlTreeParse(fileURL, useInternalNodes = TRUE)
head(doc)
doc <- xmlTreeParse(fileURL)
head(doc)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileURL <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class="score"]",xmlValue)
teams <- xpathSApply(doc,"//li[@class="team-name"]",xmlValue)
scores
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
scores <- xpathSApply(doc,"//div[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
teams
teams <- xpathSApply(doc,"//div[@class='game-info']",xmlValue)
teams
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
class(jsonData)
names(jsonData$owner)
jsonData$name
jsonData$owner$login
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
head(iris)
identical(iris, iris2)
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
DF <- data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
DF1 <- data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
identical(DF, DF1)
tables()
DT[2,]
DT1[2,]
DF1[2,]
DF[2,]
DF1[2,]
DT[DT$y=="a",]
DF1[DF1$y=="a",]
head(DF,3)
head(DF1,3)
DF1
DF1[2,]
DF1[DF1$y=="a",]
DT[c(2,3)]
DF1[c(2,3)]
DF1[,c(2,3)]
DF[,c(2,3)]
class(DF)
class(DF1)
DF1[,list(mean(x),sum(z))]
DT[,table(y)]
DF1[,table(y)]
DF[,list(mean(x),sum(z))]
DF1[,list(mean(x),sum(z))]
DF1[,table(y)]
DF[,table(y)]
DF1[,w:=z^2]
head(DF1,2)
head(DF1,1)
